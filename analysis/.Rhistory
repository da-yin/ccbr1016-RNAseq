}}
v1 <- voom(as.matrix(x),design,plot=F,normalize="quantile")
cat("voom normalization\n")
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
cat("ensID,gene,sf combined\n")
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
dt = decideTests(ebayes.fit)
# require(Glimma)
glMDPlot(ebayes.fit, status=dt, counts=v1, groups=Group, side.main="Symbols")
cat("lmFit calculated\n")
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
cat("limma DEG table generated\n")
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
cat("Reformatted DEG table generated\n")
file.rename(from = list.files(pattern = "glimma-plots"), to = paste0("glimma-plots_",cons[i],sep=""))
}
limmaDEG(DIR,FILE1,FILE2, CONTRASTS)
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
list.files()
list.files(pattern = "DEG")
dir.exists("/processedData/DEGs/")
dir.exists("/processedData/")
dir.exists("./processedData/")
if dir.exists("./processedData/DEGs"){
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
else dir.create("./processedData/DEGs"){
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
}
}
if dir.exists("./processedData/DEGs"){
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")}
if dir.exists("./processedData/DEGs"){
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
}
aa = 5
if (dir.exists("./processedData/DEGs")){
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
}
if (!dir.exists("./processedData/DEGs")){
dir.create("./processedData/")
}
limmaDEG(DIR,FILE1,FILE2, CONTRASTS)
if (!dir.exists("./processedData/DEGs")){
dir.create("./processedData/")
}
if (!dir.exists("./processedData/DEGs")){
dir.create("./processedData/DEGs")
}
limmaDEG = function(DIR,FILE1,FILE2, CONTRASTS){
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
#cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
v1 <- voom(as.matrix(x),design,plot=F,normalize="quantile")
cat("voom normalization\n")
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
cat("ensID,gene,sf combined\n")
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
dt = decideTests(ebayes.fit)
# require(Glimma)
glMDPlot(ebayes.fit, status=dt, counts=v1, groups=Group, side.main="Symbols")
cat("lmFit calculated\n")
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
cat("limma DEG table generated\n")
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
cat("Reformatted DEG table generated\n")
file.rename(from = list.files(pattern = "glimma-plots"), to = paste0("glimma-plots_",cons[i],sep=""))
}
limmaDEG(DIR,FILE1,FILE2, CONTRASTS)
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
limmaDEG = function(DIR,FILE1,FILE2, CONTRASTS){
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
#cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
v1 <- voom(as.matrix(x),design,plot=F,normalize="quantile")
cat("voom normalization\n")
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
cat("ensID,gene,sf combined\n")
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
dt = decideTests(ebayes.fit)
# require(Glimma)
glMDPlot(ebayes.fit, status=dt, counts=v1, groups=Group, side.main="Symbols")
cat("lmFit calculated\n")
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
cat("limma DEG table generated\n")
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
cat("Reformatted DEG table generated\n")
file.rename(from = list.files(pattern = "glimma-plots"), to = paste0("glimma-plots_",cons[i],sep=""))
path1 = paste0("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/", paste("glimma-plots_",cons[i],sep=""))
path2 = paste0("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/results/", paste("glimma-plots_",cons[i],sep=""))
file.move(path1, path2)
}
limmaDEG(DIR,FILE1,FILE2, CONTRASTS)
limmaDEG = function(DIR,FILE1,FILE2, CONTRASTS){
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
#cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
v1 <- voom(as.matrix(x),design,plot=F,normalize="quantile")
cat("voom normalization\n")
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
cat("ensID,gene,sf combined\n")
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
dt = decideTests(ebayes.fit)
# require(Glimma)
glMDPlot(ebayes.fit, status=dt, counts=v1, groups=Group, side.main="Symbols")
cat("lmFit calculated\n")
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
cat("limma DEG table generated\n")
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
cat("Reformatted DEG table generated\n")
file.rename(from = list.files(pattern = "glimma-plots"), to = paste0("glimma-plots_",cons[i],sep=""))
path1 = paste0("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/", paste("glimma-plots_",cons[i],sep=""))
path2 = paste0("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/results/", paste("glimma-plots_",cons[i],sep=""))
file.move(path1, path2)
file.move(list.files(pattern = "DEG"), "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/")
}
limmaDEG(DIR,FILE1,FILE2, CONTRASTS)
suppressMessages(library(rgl))
suppressMessages(library(knitr))
suppressMessages(library('edgeR'))
suppressMessages(library('statmod'))
suppressMessages(library('RColorBrewer'))
suppressMessages(library(gplots))
suppressMessages(library('reshape'))
suppressMessages(library('ggplot2'))
suppressMessages(library('limma'))
suppressMessages(library('geneplotter'))
suppressMessages(library('ggfortify'))
suppressMessages(library(filesstrings))
suppressMessages(library(ff))
suppressMessages(library(Glimma))
setwd("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/")
DIR <- "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
FILE1 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/sampletable.txt"
FILE2 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt"
CONTRASTS <- "SH1_0pt5mM SCR_0pt5mM"
analysis_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
results_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/results/"
DEGs_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/"
suppressMessages(library(rgl))
suppressMessages(library(knitr))
suppressMessages(library('edgeR'))
suppressMessages(library('statmod'))
suppressMessages(library('RColorBrewer'))
suppressMessages(library(gplots))
suppressMessages(library('reshape'))
suppressMessages(library('ggplot2'))
suppressMessages(library('limma'))
suppressMessages(library('geneplotter'))
suppressMessages(library('ggfortify'))
suppressMessages(library(filesstrings))
suppressMessages(library(ff))
suppressMessages(library(Glimma))
setwd("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/")
DIR <- "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
FILE1 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/sampletable.txt"
FILE2 <- "~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt"
CONTRASTS <- "SH1_0pt5mM SCR_0pt5mM"
analysis_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
results_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/results/"
DEGs_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/"
limmaDEG = function(DIR,FILE1,FILE2, CONTRASTS){
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
#cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
v1 <- voom(as.matrix(x),design,plot=F,normalize="quantile")
cat("voom normalization\n")
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
cat("ensID,gene,sf combined\n")
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
dt = decideTests(ebayes.fit)
# require(Glimma)
glMDPlot(ebayes.fit, status=dt, counts=v1, groups=Group, side.main="Symbols")
cat("lmFit calculated\n")
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
cat("limma DEG table generated\n")
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
cat("Reformatted DEG table generated\n")
file.rename(from = list.files(pattern = "glimma-plots"), to = paste0("glimma-plots_",cons[i],sep=""))
path1 = paste0(analysis_dir, paste("glimma-plots_",cons[i],sep=""))
path2 = paste0(results_dir, paste("glimma-plots_",cons[i],sep=""))
file.move(path1, path2)
file.move(list.files(pattern = "DEG"), DEGs_dir)
}
limmaDEG(DIR,FILE1,FILE2, CONTRASTS)
limmaDEG = function(DIR,FILE1,FILE2, CONTRASTS){
sampleinfo=read.delim(FILE1)
x = read.delim(FILE2,row.names=1)
colnames(x)=as.character(sampleinfo[,4])
myconditions = as.factor(sampleinfo$condition)
dge_before = DGEList(counts=x,group=myconditions)
dge_before <- calcNormFactors(dge_before,method="TMM")
Group <- factor(sampleinfo$condition)
design=model.matrix(~0+Group)
contras=unlist(strsplit(CONTRASTS, split=" "))
#cat(contras,"\t",length(contras),"\t",contras[1],"\t",contras[2],"\n",file="readcontralimma.txt")
cons=c()
for(i in seq(1, length(contras), by = 2))
{{
cons=c(cons,paste(contras[i],"-",contras[i+1],sep=""))
}}
v1 <- voom(as.matrix(x),design,plot=F,normalize="quantile")
cat("voom normalization\n")
sf = v1$E/log2((x/colSums(x))*1000000)
rn=rownames(v1$E)
ensID=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(rn)),1,function(z) unlist(strsplit(z, "\\|"))[2])
mydata=cbind(ensID,gene,v1$E)
sf=cbind(ensID,gene,sf)
cat("ensID,gene,sf combined\n")
nb=length(contras)/2
colnames(design) <- levels(Group)
fit <- lmFit(v1,design)
contrast.matrix <- makeContrasts(contrasts=cons,levels=design)
fitb <- contrasts.fit(fit, contrast.matrix)
ebayes.fit=eBayes(fitb)
dt = decideTests(ebayes.fit)
# require(Glimma)
glMDPlot(ebayes.fit, status=dt, counts=v1, groups=Group, side.main="Symbols")
cat("lmFit calculated\n")
all.genes.con = topTable(ebayes.fit, coef = i, number=nrow(ebayes.fit), sort.by="none")
all.genes.con$FC <- ifelse(all.genes.con$logFC<0, -1/(2^all.genes.con$logFC), 2^all.genes.con$logFC)
final=all.genes.con
x=rownames(all.genes.con)
ensID=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[1])
gene=apply(array(as.character(x)),1,function(z) unlist(strsplit(z, "\\|"))[2])
all.genes.con=cbind(ensID,gene,all.genes.con)
write.table(all.genes.con,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),
sep="\t",col.names=NA)
cat("limma DEG table generated\n")
#Reformatted DEG File
limmaout=read.table(paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""), header = TRUE)
limmaout=limmaout[,which(names(limmaout) %in% c("X","gene","logFC","P.Value"))]
limmaout$fc=2^limmaout$logFC
down_reg=limmaout$logFC<0
limmaout$fc[down_reg]=-1/limmaout$fc[down_reg]
limmaout=limmaout[,c("X","gene","fc","logFC","P.Value")]
colnames(limmaout)=c("ensid_gene","gene","fc","log2fc","pvalue")
limmaout$fdr=p.adjust(limmaout$pvalue,method='fdr',n=length(limmaout$pvalue))
limmaout$gsea_ranking_score=-log10(limmaout$pvalue)*sign(limmaout$log2fc)
write.table(limmaout,file=paste("limma_DEG_",cons[i],"_all_genes.txt",sep=""),row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")
cat("Reformatted DEG table generated\n")
file.rename(from = list.files(pattern = "glimma-plots"), to = paste0("glimma-plots_",cons[i],sep=""))
path1 = paste0(analysis_dir, paste("glimma-plots_",cons[i],sep=""))
path2 = paste0(results_dir, paste("glimma-plots_",cons[i],sep=""))
file.move(path1, path2)
file.move(list.files(pattern = "DEG"), DEGs_dir)
}
limmaDEG(DIR=analysis_dir,
FILE1="~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/sampletable.txt",
FILE2="~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH1_0pt5mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt",
CONTRASTS="SH1_0pt5mM SCR_0pt5mM")
limmaDEG(DIR=analysis_dir,
FILE1="~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH2_0pt5mM-SCR_0pt5mM_1_2/sampletable.txt",
FILE2="~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SH2_0pt5mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt",
CONTRASTS="SH2_0pt5mM SCR_0pt5mM")
limmaDEG(DIR=analysis_dir,
FILE1="~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SCR_4mM-SCR_0pt5mM_1_2/sampletable.txt",
FILE2="~/Desktop/active_projects/ccbr1016-RNAseq/rawData/filterdCounts/DEG_SCR_4mM-SCR_0pt5mM_1_2/RawCountFile_RSEM_genes_filtered.txt",
CONTRASTS="SCR_4mM SCR_0pt5mM")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/")
analysis_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/"
results_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/results/"
DEGs_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/"
normalized_data_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/"
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(rgl))
suppressMessages(library(knitr))
suppressMessages(library('edgeR'))
suppressMessages(library('statmod'))
suppressMessages(library('RColorBrewer'))
suppressMessages(library(gplots))
suppressMessages(library('reshape'))
suppressMessages(library('ggplot2'))
suppressMessages(library('limma'))
suppressMessages(library('geneplotter'))
suppressMessages(library('ggfortify'))
suppressMessages(library(filesstrings))
suppressMessages(library(ff))
suppressMessages(library(Glimma))
normalized_data_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/"
normalized_data = read.table(file = list.files(path = normalized_data_dir, pattern = "control"), header = T, sep = '\t', row.names = 2)
list.files(normalized_data_dir)
list.files(normalized_data_dir, pattern = "control")
aaa = read.table(list.files(normalized_data_dir, pattern = "control"))
list.files(normalized_data_dir, pattern = "control")
read.table(list.files(normalized_data_dir, pattern = "control"))
aaa = read.table(list.files(path = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/", pattern = "control"))
aaa = read.table(list.files(path = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/limma_Voom_normalized_experiment-control_data.txt")
aaa = read.table(list.files(path = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/limma_Voom_normalized_experiment-control_data.txt"))
aaa = read.table("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/limma_Voom_normalized_experiment-control_data.txt")
aaa
aaa = read.table(list.files(normalized_data_dir, pattern = "control"))
list.files(normalized_data_dir, pattern = "control")
aaa = read.table("~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/limma_Voom_normalized_experiment-control_data.txt")
aaa = read.table(list.files(normalized_data_dir, pattern = "control"))
aaa = read.table(list.files(normalized_data_dir))
list.files(path = DEGs_dir)
normalizedData = list.files(normalized_data_dir, pattern = "control")
normalizedData
normalized_data = read.table(paste(normalized_data_dir, normalizedData, sep = "/"), header = T, sep = '\t', row.names = 2)
normalized_data = read.table(paste(normalized_data_dir, normalizedData, sep = "/"), header = T, sep = '\t', row.names = 1)
normalized_data_dir = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/normalized/"
normalizedData = list.files(normalized_data_dir, pattern = "control")
normalized_data = read.table(paste(normalized_data_dir, normalizedData, sep = "/"), header = T, sep = '\t', row.names = 1)
#normalized_data = subset(normalized_data, select = -c(X,gene))
SH1_SH2_SCR_0.5 = subset(normalized_data, select=c(SCR_0pt5mM_A,SCR_0pt5mM_B,SH1_0pt5mM_A,
SH1_0pt5mM_B,SH2_0pt5mM_A,SH2_0pt5mM_B))
pca.SH1_SH2_SCR_0.5 = prcomp(t(SH1_SH2_SCR_0.5))
autoplot(pca.SH1_SH2_SCR_0.5,label=T,repel = TRUE,
label.size = 3,label.repel=T)+ theme_light()
knitr::opts_chunk$set(fig.width=14, fig.height=9)
# remove the experiment-control DEG table from subsequent pathway analysis
toRemove = dir(path = "~/Desktop/active_projects/ccbr1016-RNAseq/analysis/processedData/DEGs/",pattern = "control")
toRemove
normalized_data
normalized_data$gene = gsub(".*[|]","", rownames(normalized_data))
normalized_data
normalized_data$gene
normalized_data_SH1_SCR_0.5 = subset(normalized_data, select=c(gene, SCR_0pt5mM_A,SCR_0pt5mM_B,SH1_0pt5mM_A,SH1_0pt5mM_B))
serine1 = myBP_gsea[["SH1_0pt5mM-SCR_0pt5mM"]][which(myBP_gsea[["SH1_0pt5mM-SCR_0pt5mM"]]$ID=="GO:0009070"),]
results_dir
knit_with_parameters('~/Desktop/active_projects/ccbr1016-RNAseq/analysis/RNAseq.Rmd')
install.packages("Routliers")
