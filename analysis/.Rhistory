theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=2), vjust=0.25,  size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25,  size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25,hjust=3  ,size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25,hjust=-3  ,size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25,hjust=-1  ,size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25,hjust=-0.5  ,size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25,hjust=-0.1  ,size=2)
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25 ,size=2)
#These are the pathways of interest:
pathways_kegg = c("Aminoacyl-tRNA biosynthesis","One carbon pool by folate","Glycine, serine and threonine metabolism","cAMP signaling pathway","PI3K-Akt signaling pathway")
kegg_Gcn1_SH1_0.5_select = kegg_Gcn1_SH1_0.5[which(kegg_Gcn1_SH1_0.5$Description%in%pathways_kegg),]
kegg_Atf4_SH2_0.5_select = kegg_Atf4_SH2_0.5[which(kegg_Atf4_SH2_0.5$Description%in%pathways_kegg),]
kegg_select = rbind(kegg_Gcn1_SH1_0.5_select,kegg_Atf4_SH2_0.5_select)
p_kegg =
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))
p_kegg_label =
ggplot(data = kegg_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line"))+
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25 ,size=2)
#    geom_text(data = kegg_select,aes(x = Description, y =p.adjust,label=round(p.adjust,digits =4)))
pdf(file = "results/kegg_pathways.pdf", height = 2.5, width = 6.7)
print(p_kegg)
dev.off()
pdf(file = "results/kegg_pathways_label.pdf", height = 2.5, width = 6.7)
print(p_kegg_label)
dev.off()
bp_pathways = c("tRNA aminoacylation","amino acid activation","regulation of rRNA processing","serine family amino acid biosynthetic process","positive regulation of transcription from RNA polymerase II promoter in response to stress","regulation of immune response","activation of immune response")
bp_Gcn1_SH1_0.5_select = bp_Gcn1_SH1_0.5[which(bp_Gcn1_SH1_0.5$Description%in%bp_pathways),]
bp_Atf4_SH2_0.5_select = bp_Atf4_SH2_0.5[which(bp_Atf4_SH2_0.5$Description%in%bp_pathways),]
bp_select = rbind(bp_Gcn1_SH1_0.5_select,bp_Atf4_SH2_0.5_select)
p_bp =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge", width = 0.5 ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label)
pdf(file = "results/GO_BP_pathways.pdf", height = 2.5, width = 6.7)
print(p_bp)
dev.off()
p_bp_label =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge", width = 0.5 ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25 ,size=2)
pdf(file = "results/GO_BP_pathways_label.pdf", height = 2.5, width = 6.7)
print(p_bp_label)
dev.off()
bp_pathways = c("tRNA aminoacylation","amino acid activation","regulation of rRNA processing","serine family amino acid biosynthetic process","positive regulation of transcription from RNA polymerase II promoter in response to stress","regulation of immune response","activation of immune response")
bp_Gcn1_SH1_0.5_select = bp_Gcn1_SH1_0.5[which(bp_Gcn1_SH1_0.5$Description%in%bp_pathways),]
bp_Atf4_SH2_0.5_select = bp_Atf4_SH2_0.5[which(bp_Atf4_SH2_0.5$Description%in%bp_pathways),]
bp_select = rbind(bp_Gcn1_SH1_0.5_select,bp_Atf4_SH2_0.5_select)
p_bp =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge", width = 0.9 ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label)
pdf(file = "results/GO_BP_pathways.pdf", height = 2.5, width = 6.7)
print(p_bp)
dev.off()
p_bp_label =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge", , width = 0.9 ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25 ,size=2)
pdf(file = "results/GO_BP_pathways_label.pdf", height = 2.5, width = 6.7)
print(p_bp_label)
dev.off()
bp_pathways = c("tRNA aminoacylation","amino acid activation","regulation of rRNA processing","serine family amino acid biosynthetic process","positive regulation of transcription from RNA polymerase II promoter in response to stress","regulation of immune response","activation of immune response")
bp_Gcn1_SH1_0.5_select = bp_Gcn1_SH1_0.5[which(bp_Gcn1_SH1_0.5$Description%in%bp_pathways),]
bp_Atf4_SH2_0.5_select = bp_Atf4_SH2_0.5[which(bp_Atf4_SH2_0.5$Description%in%bp_pathways),]
bp_select = rbind(bp_Gcn1_SH1_0.5_select,bp_Atf4_SH2_0.5_select)
p_bp =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge" ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label)
pdf(file = "results/GO_BP_pathways.pdf", height = 2.5, width = 6.7)
print(p_bp)
dev.off()
p_bp_label =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.25 ,size=2)
pdf(file = "results/GO_BP_pathways_label.pdf", height = 2.5, width = 6.7)
print(p_bp_label)
dev.off()
ggsave(filename = "results/IPA_upstream_main.pdf", plot = p)
ggsave(filename = "results/IPA_upstream_supplementary.pdf", plot = p2)
myComplexHeatmap = function(mat){
p1 =
ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
col=rev(brewer.pal(5, "RdBu")),
row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
fontface = "bold"),
column_names_gp = gpar(fontsize = 10, fontface = "bold"),
cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
column_names_rot = 65, width = unit(5, "cm"),
column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
print(p1)
dev.off()
}
#degs heatmap
myComplexHeatmap(mat = up_Gcn1_Atf4)
myComplexHeatmap(mat = down_Gcn1_Atf4)
#genes of interest
myComplexHeatmap(mat = amino_acid_transporters)
myComplexHeatmap(mat = chemokines)
#bp genes
myComplexHeatmap(mat = serine_family_amino_acid_biosynthetic_process)
myComplexHeatmap(mat = positive_regulation_of_transcription_from_RNA_polymerase)
myComplexHeatmap(mat = regulation_of_immune_response)
myComplexHeatmap(mat = activation_of_immune_response)
myComplexHeatmap(mat = tRNA_aminoacylation)
#kegg genes
myComplexHeatmap(mat = Aminoacyl_tRNA_biosynthesis)
myComplexHeatmap(mat = One_carbon_pool_by_folate)
myComplexHeatmap(mat = Glycine_serine_and_threonine_metabolism)
myComplexHeatmap(mat = Cellular_senescence)
myComplexHeatmap(mat = cAMP_signaling_pathway)
myComplexHeatmap(mat = PI3K_Akt_signaling_pathway)
myComplexHeatmap = function(mat){
p1 =
ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
col=rev(brewer.pal(15, "RdBu")),
row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
fontface = "bold"),
column_names_gp = gpar(fontsize = 10, fontface = "bold"),
cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
column_names_rot = 65, width = unit(5, "cm"),
column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
print(p1)
dev.off()
}
#degs heatmap
myComplexHeatmap(mat = up_Gcn1_Atf4)
myComplexHeatmap(mat = down_Gcn1_Atf4)
#genes of interest
myComplexHeatmap(mat = amino_acid_transporters)
myComplexHeatmap(mat = chemokines)
#bp genes
myComplexHeatmap(mat = serine_family_amino_acid_biosynthetic_process)
myComplexHeatmap(mat = positive_regulation_of_transcription_from_RNA_polymerase)
myComplexHeatmap(mat = regulation_of_immune_response)
myComplexHeatmap(mat = activation_of_immune_response)
myComplexHeatmap(mat = tRNA_aminoacylation)
#kegg genes
myComplexHeatmap(mat = Aminoacyl_tRNA_biosynthesis)
myComplexHeatmap(mat = One_carbon_pool_by_folate)
myComplexHeatmap(mat = Glycine_serine_and_threonine_metabolism)
myComplexHeatmap(mat = Cellular_senescence)
myComplexHeatmap(mat = cAMP_signaling_pathway)
myComplexHeatmap(mat = PI3K_Akt_signaling_pathway)
myComplexHeatmap = function(mat){
p1 =
ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
col=colorRampPalette(c("red","white","blue"))(256),
row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
fontface = "bold"),
column_names_gp = gpar(fontsize = 10, fontface = "bold"),
cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
column_names_rot = 65, width = unit(5, "cm"),
column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
print(p1)
dev.off()
}
# myComplexHeatmap = function(mat){
# p1 =
# ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
#                         col=rev(brewer.pal(15, "RdBu")),
#                         row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
#                                                        ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
#                                                        ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
#                                             fontface = "bold"),
#                         column_names_gp = gpar(fontsize = 10, fontface = "bold"),
#                         cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
#                         column_names_rot = 65, width = unit(5, "cm"),
#                         column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
#
# pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
# print(p1)
# dev.off()
#
# }
#degs heatmap
myComplexHeatmap(mat = up_Gcn1_Atf4)
myComplexHeatmap(mat = down_Gcn1_Atf4)
#genes of interest
myComplexHeatmap(mat = amino_acid_transporters)
myComplexHeatmap(mat = chemokines)
#bp genes
myComplexHeatmap(mat = serine_family_amino_acid_biosynthetic_process)
myComplexHeatmap(mat = positive_regulation_of_transcription_from_RNA_polymerase)
myComplexHeatmap(mat = regulation_of_immune_response)
myComplexHeatmap(mat = activation_of_immune_response)
myComplexHeatmap(mat = tRNA_aminoacylation)
#kegg genes
myComplexHeatmap(mat = Aminoacyl_tRNA_biosynthesis)
myComplexHeatmap(mat = One_carbon_pool_by_folate)
myComplexHeatmap(mat = Glycine_serine_and_threonine_metabolism)
myComplexHeatmap(mat = Cellular_senescence)
myComplexHeatmap(mat = cAMP_signaling_pathway)
myComplexHeatmap(mat = PI3K_Akt_signaling_pathway)
myComplexHeatmap = function(mat){
p1 =
ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
col=colorRampPalette(c("darkblue","darkred"))(256),
row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
fontface = "bold"),
column_names_gp = gpar(fontsize = 10, fontface = "bold"),
cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
column_names_rot = 65, width = unit(5, "cm"),
column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
print(p1)
dev.off()
}
# myComplexHeatmap = function(mat){
# p1 =
# ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
#                         col=rev(brewer.pal(15, "RdBu")),
#                         row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
#                                                        ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
#                                                        ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
#                                             fontface = "bold"),
#                         column_names_gp = gpar(fontsize = 10, fontface = "bold"),
#                         cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
#                         column_names_rot = 65, width = unit(5, "cm"),
#                         column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
#
# pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
# print(p1)
# dev.off()
#
# }
#degs heatmap
myComplexHeatmap(mat = up_Gcn1_Atf4)
myComplexHeatmap(mat = down_Gcn1_Atf4)
#genes of interest
myComplexHeatmap(mat = amino_acid_transporters)
myComplexHeatmap(mat = chemokines)
#bp genes
myComplexHeatmap(mat = serine_family_amino_acid_biosynthetic_process)
myComplexHeatmap(mat = positive_regulation_of_transcription_from_RNA_polymerase)
myComplexHeatmap(mat = regulation_of_immune_response)
myComplexHeatmap(mat = activation_of_immune_response)
myComplexHeatmap(mat = tRNA_aminoacylation)
#kegg genes
myComplexHeatmap(mat = Aminoacyl_tRNA_biosynthesis)
myComplexHeatmap(mat = One_carbon_pool_by_folate)
myComplexHeatmap(mat = Glycine_serine_and_threonine_metabolism)
myComplexHeatmap(mat = Cellular_senescence)
myComplexHeatmap(mat = cAMP_signaling_pathway)
myComplexHeatmap(mat = PI3K_Akt_signaling_pathway)
myComplexHeatmap = function(mat){
p1 =
ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
col=colorRampPalette(c("darkblue","grey","darkred"))(256),
row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
fontface = "bold"),
column_names_gp = gpar(fontsize = 10, fontface = "bold"),
cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
column_names_rot = 65, width = unit(5, "cm"),
column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
print(p1)
dev.off()
}
# myComplexHeatmap = function(mat){
# p1 =
# ComplexHeatmap::Heatmap(matrix = t(scale(t(data.matrix(mat)))), name="Z-score", km=1,
#                         col=rev(brewer.pal(15, "RdBu")),
#                         row_names_gp = gpar(fontsize = ifelse(nrow(mat) <= 30, 10,
#                                                        ifelse(30<nrow(mat)&nrow(mat) <= 45, 7,
#                                                        ifelse(45<nrow(mat)&nrow(mat) <= 60, 5, 4))),
#                                             fontface = "bold"),
#                         column_names_gp = gpar(fontsize = 10, fontface = "bold"),
#                         cluster_columns = T, column_title_gp = gpar(fontsize = 10, fontface = "bold"),
#                         column_names_rot = 65, width = unit(5, "cm"),
#                         column_title = gsub("_"," ",deparse(substitute(mat))), column_title_side = "top")
#
# pdf(file = paste0("results/", deparse(substitute(mat)), ".pdf"))
# print(p1)
# dev.off()
#
# }
#degs heatmap
myComplexHeatmap(mat = up_Gcn1_Atf4)
myComplexHeatmap(mat = down_Gcn1_Atf4)
#genes of interest
myComplexHeatmap(mat = amino_acid_transporters)
myComplexHeatmap(mat = chemokines)
#bp genes
myComplexHeatmap(mat = serine_family_amino_acid_biosynthetic_process)
myComplexHeatmap(mat = positive_regulation_of_transcription_from_RNA_polymerase)
myComplexHeatmap(mat = regulation_of_immune_response)
myComplexHeatmap(mat = activation_of_immune_response)
myComplexHeatmap(mat = tRNA_aminoacylation)
#kegg genes
myComplexHeatmap(mat = Aminoacyl_tRNA_biosynthesis)
myComplexHeatmap(mat = One_carbon_pool_by_folate)
myComplexHeatmap(mat = Glycine_serine_and_threonine_metabolism)
myComplexHeatmap(mat = Cellular_senescence)
myComplexHeatmap(mat = cAMP_signaling_pathway)
myComplexHeatmap(mat = PI3K_Akt_signaling_pathway)
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() + scale_fill_grey()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + theme(legend.position = "top",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
types = c("kinase","cytokine","growth factor","ligand-dependent nuclear receptor","transmembrane receptor")
myList = list()
for (i in types){
myList[[i]] = upstream[which(upstream$Molecule.Type==i),]
myList[[i]] = top_n(x = myList[[i]], n = 5, wt = -p.value.of.overlap)
}
my_data = do.call(dplyr::bind_rows, myList)
my_data = select(my_data, c("Upstream.Regulator", "Molecule.Type", "Activation.z.score", "sign.value"))
types = c("kinase","cytokine","growth factor","ligand-dependent nuclear receptor","transmembrane receptor")
myList = list()
for (i in types){
myList[[i]] = upstream[which(upstream$Molecule.Type==i),]
myList[[i]] = top_n(x = myList[[i]], n = 5, wt = -p.value.of.overlap)
}
my_data = do.call(dplyr::bind_rows, myList)
my_data = dplyr::select(my_data, c("Upstream.Regulator", "Molecule.Type", "Activation.z.score", "sign.value"))
supp_v1 =
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() + scale_fill_grey()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
supp_v2 =
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
supp_v3 =
ggplot(my_data, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + theme(legend.position = "top",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=7, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=7, face="bold", colour = "black"),strip.text = element_text(face="bold", size=8), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
# +
# geom_text(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value, label=Upstream.Regulator), position=position_dodge(width=0.9), hjust=-0.25)
ggsave(filename = "results/IPA_upstream_supplementary_v1.pdf", plot = supp_v1)
ggsave(filename = "results/IPA_upstream_supplementary_v2.pdf", plot = supp_v2)
ggsave(filename = "results/IPA_upstream_supplementary_v3.pdf", plot = supp_v3)
ggplot(main_long3) +
geom_point(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value),colour="darkgrey") + coord_flip() +
geom_bar(aes(x = Upstream.Regulator, y = Activation.z.score, fill=Molecule.Type), stat = "identity", position = "dodge") +
scale_y_continuous(sec.axis = sec_axis(~./1, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none")
# +
#   geom_point(aes(x = reorder(Upstream.Regulator, log10P), y = log10P)) +
#   scale_y_continuous(sec.axis = sec_axis(~./1, name = "log10P")) + coord_flip() + facet_wrap(vars(Molecule.Type))+ theme(legend.position = c(0.2, 0.2))
scl = 2
main_v1 =
ggplot(main_long3, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() + scale_fill_grey()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=10, face="bold", colour = "black"),strip.text = element_text(face="bold", size=12), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
main_v2 =
ggplot(main_long3, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() +
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=10, face="bold", colour = "black"),strip.text = element_text(face="bold", size=12), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
main_v3 =
ggplot(main_long3, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() +
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=10, face="bold", colour = "black"),strip.text = element_text(face="bold", size=12), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
ggsave(filename = "results/IPA_upstream_main_v1.pdf", plot = main_v1)
ggsave(filename = "results/IPA_upstream_main_v2.pdf", plot = main_v2)
ggsave(filename = "results/IPA_upstream_main_v3.pdf", plot = main_v3)
scl = 2
main_v1 =
ggplot(main_long3, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() + scale_fill_grey()+
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=10, face="bold", colour = "black"),strip.text = element_text(face="bold", size=12), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
main_v2 =
ggplot(main_long3, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() +
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + facet_wrap(vars(Molecule.Type))+ theme(legend.position = "none",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=10, face="bold", colour = "black"),strip.text = element_text(face="bold", size=12), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
main_v3 =
ggplot(main_long3, aes(fill=Molecule.Type)) +
geom_bar(aes(x = reorder(Upstream.Regulator, abs(sign.value)), y = sign.value), stat = "identity", position = "dodge") +  coord_flip() +
geom_point(aes(x = Upstream.Regulator, y = Activation.z.score*scl),colour="red") +
scale_y_continuous(sec.axis = sec_axis(~./scl, name = "Activation.z.score")) + theme(legend.position = "top",axis.title.x = element_text(size=13, face="bold", colour = "black"),
axis.title.y = element_text(size=13, face="bold", colour = "black"),
axis.text.x = element_text(size=10, face="bold", colour = "black"),
# axis.text.y = element_text(size=12,  colour = "black"), # unbold
axis.text.y = element_text(size=10, face="bold", colour = "black"),strip.text = element_text(face="bold", size=12), axis.line.x.top = element_line(color = "red"), axis.title.x.top = element_text(color = "red"), axis.text.x.top = element_text(color = "red")) +ylab("sign value (-log10P * sign of activation)") + xlab("Upstream Regulator")+ geom_hline(yintercept = 0, linetype="dotted",
color = "darkgrey", size=1)
ggsave(filename = "results/IPA_upstream_main_v1.pdf", plot = main_v1)
ggsave(filename = "results/IPA_upstream_main_v2.pdf", plot = main_v2)
ggsave(filename = "results/IPA_upstream_main_v3.pdf", plot = main_v3)
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.35 ,size=2)
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.35 ,size=2, face="bold")
p_bp_label =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.35 ,size=2, face="bold")
pdf(file = "results/GO_BP_pathways_label.pdf", height = 2.5, width = 6.7)
print(p_bp_label)
dev.off()
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.05 ,size=2, face="bold")
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.55 ,size=2, face="bold")
p_bp_label =
ggplot(data = bp_select, aes(x = Description, y = NES, fill = contrast)) + geom_bar(stat = "identity", position="dodge",  ) + coord_flip()+
theme(axis.text = element_text(size = 10,face = "bold",), axis.title = element_text(face="bold"), legend.position = "top", legend.key.size = unit(0.5,"line")) + scale_x_discrete(label=short_label) +
geom_text(aes(label=round(p.adjust,digits =4)), position=position_dodge(width=1), vjust=0.55 ,size=2, face="bold")
pdf(file = "results/GO_BP_pathways_label.pdf", height = 2.5, width = 6.7)
print(p_bp_label)
dev.off()
